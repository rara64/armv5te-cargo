name: Build cargo

on:
  schedule:
    - cron: '1 2 1 * *'
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check for new release
        run: |
          git clone https://github.com/rust-lang/cargo
          cd cargo
          
          export CARGO_VER=$(cat Cargo.toml | grep 'version =' | head -n1 | cut -f 2 -d '"')
          export CARGO_RELEASE=$(jq -r '[.[]| .tag_name][0]' <<< $(curl --silent https://api.github.com/repos/rara64/armv5te-cargo/releases))
          
          echo "CARGO_VER=$CARGO_VER" >> $GITHUB_ENV
          echo "CARGO_RELEASE=$CARGO_RELEASE" >> $GITHUB_ENV
      - name: Checkout code
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        uses: actions/checkout@v3
      - name: Set up QEMU
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        uses: docker/setup-buildx-action@v2.2.1
      - name: Build and load the image
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        run: |
          docker buildx build --load --tag cargo --platform linux/arm/v5 --allow security.insecure --no-cache .
      - name: Copy package from the image
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        run: |
          docker create --name cargo cargo
          mkdir cargo
          docker cp cargo:/cargo/target/armv5te-unknown-linux-gnueabi/debian/cargo_${{ env.CARGO_VER }}_armel.deb cargo
          
          export CARGO=$(find cargo/ -type f -name "*.deb")
          echo "CARGO=$CARGO" >> $GITHUB_ENV
      - name: Upload package to release
        if: ${{ env.CARGO_VER != env.CARGO_RELEASE }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.TOKEN }}
          file: ${{ env.CARGO }}
          tag: ${{ env.CARGO_VER }}
          body: Cargo ${{ env.CARGO_VER }}
          overwrite: true
